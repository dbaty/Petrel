Todo
====

- add a tab to enter metadata in the edit form: creator, keywords,
  language, template, etc.

- provide a custom file/image browser for TinyMCE

- use 'name' or 'id', not both

- should we really include a field for the id/name in the edit form?

- perhaps we should move the standard views from the content type
  modules ('content/*.py') to other modules ('views/*.py'). That would
  probably help with circular import.

- implement navigation tree;

- implement site map;

- update 'admin.css' and 'toolbar.css'

- have a nicer login form

- try another (more simple?) menu library for the toolbar

- enhance success/error message (using
  http://plugins.jquery.com/project/jquery-toastmessage-plugin)

- use a prefix to avoid clashes between views and resources. In fact,
  this is already implemented in Pyramid. We just have to use
  '@@<view_name>' in HTML links

- order items in folder (see recent changes in repoze.folder)

- use the catalog to list items in the folder view page (?)

- add automatic creation and modification date attributes on items

- make the 'cancel' button in forms go back to the referrer page (at
  least when we come from the 'contents' view)

- is the meta_type needed? Should we use it instead of the class
  itself as the key to the content type registry, as this would
  simplify the replacement of a content type. On the other hand, to
  replace a content type, one could simply remove the existing entry
  and adding a new one under any meta_type, instead of registering
  under the same meta_type to overwrite the existing one

- 'label' is not the best name. Why not 'type_label'?

- protection against CSRF

- implement an error page for 404 errors (?)

- index contents of files

- authentication & authorization

- it should be easy to override assets in applications that use Petrel
  with 'Configurator.override_asset()'

- check that unused blob files (that correspond with File object that
  have been edited or removed) are correctly removed when the database
  is packed

- add more unit/integration tests

- add functional tests

- i18n

- think about switching to 'deform'. Although WTForms is simple and
  works, it does not seem to get much traction and only contains very
  simple widgets.

- settle on using 'tal:xxx' or '${}' substition in templates.

- inline editing

- clean up 'static/js/tiny_mce': we probably do not need everything


Credits
=======

Breadcrumbs: Veerle Pieters (http://veerle-v2.duoh.com/blog/about/)

Icons of content types: Famfamfam

"Tick" image: FIXME

Dropdown menu: http://www.filamentgroup.com/lab/jquery_ipod_style_and_flyout_menus/
