Todo
====

- add 'file' and 'image' content types

- switch from cleditor to TinyMCE

- use 'name' or 'id', not both

- implement navigation tree;

- implement site map;

- update 'admin.css' and 'toolbar.css'

- enhance success/error message (using
  http://plugins.jquery.com/project/jquery-toastmessage-plugin)

- use a prefix to avoid clashes between views and resources (for
  example, '@edit' instead of 'edit')

- order items in folder (see recent changes in repoze.folder)

- use the catalog to list items in the folder view page (?)

- add automatic creation and modification date attributes on items

- add a tab to enter metadata in the edit form: keywords, author,
  language, etc.

- make the 'cancel' button in forms go back to the referrer page (at
  least when we come from the 'contents' view)

- is the meta_type needed? Should we use it instead of the class
  itself as the key to the content type registry, as this would
  simplify the replacement of a content type. On the other hand, to
  replace a content type, one could simply remove the existing entry
  and adding a new one under any meta_type, instead of registering
  under the same meta_type to overwrite the existing one

- protection against CSRF

- implement an error page for 404 errors (?)

- authentication & authorization

- it should be easy to override assets in applications that use Petrel
  with 'Configurator.override_asset()'

- add more unit/integration tests

- add functional tests

- i18n

- think about switching to 'deform'. Although WTForms is simple and
  works, it does not seem to get much traction and only contains very
  simple widgets.

- settle on using 'tal:xxx' or '${}' substition in templates.

- inline editing


Credits
=======

Breadcrumbs: Veerle Pieters (http://veerle-v2.duoh.com/blog/about/)

Icons of content types: Plone

"Tick" image: FIXME
